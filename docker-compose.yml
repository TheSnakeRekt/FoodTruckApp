version: '3.9'

services:
  redis:
    image: redis:alpine
    restart: unless-stopped
    container_name: cache
    hostname: cache
    ports:
      - 6379:6379
    expose:
      - 6379
    command: redis-server --save 20 1 --loglevel warning --port 6379
    volumes: 
      - cache:/data
    networks:
      - food_truck_app

  backend:
    restart: unless-stopped
    ports: 
      - 3000:3000
    build:
      context: backend
      dockerfile: ./Dockerfile
      args:
        - PORT=3000
        - API_KEY=6939a943cde04da5996776f1789673e0
        - REDIS_EXPIRE_TIME=80000
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - DB_HOST=postgres
        - DB_PORT=5432
        - DB_USER=postgres
        - DB_PASSWORD="Postgres2024!"
        - DB_SSL=false
        - DB_NAME=postgres
        - REPORT_BASE_PATH=/src/reports
    depends_on:
      - redis
      - postgres
    volumes:
      -  backend-reports:/src/reports
    networks:
      - food_truck_app

  #frontend:
    #build:
    #  context: frontend
    #  dockerfile: ./Dockerfile
   # ports: 
   #   - 4200:4200
   # expose: 
   #   - 4200
    #depends_on:
    #  - backend
      
  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: Postgres2024!
    ports:
      - "15432:5432"
    volumes:
      - postgres-volume:/var/lib/postgresql/data
      - ./backend/db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - food_truck_app
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "jorgeradasilva@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "PgAdmin2024!"
    ports:
      - "16543:80"
    networks:
      - food_truck_app
    depends_on:
      - postgres

networks:
  food_truck_app:
    name: food_truck_network
    driver: bridge
volumes:
  cache:
    driver: local
  postgres-volume:
    driver: local
  backend-reports:
    driver: local